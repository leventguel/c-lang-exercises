/* constant.h
 *
 * Programmed by Jack W. Crenshaw, Crenshaw Associates
 * CIS #72325,1327
 *
 *	This file demonstrates how to define constants, even
 * constants that depend on other constants.  The approach
 * is preferred over using literal constants in each .h
 * or .cpp file, thereby running the risk of defining unequal
 * values in different places.
 *
 *	Note that, in C++, these constants are treated as
 * variables in the sense that they take up storage space.
 * Therefore the file produces executable code. Borland C++
 * will issue a warning about code generated by a header file,
 * but the file will work properly.
 *
 * This file is a template.  The user is invited to edit
 * it as needed for a given application.
 *
 */

#ifndef CONSTANT
#define CONSTANT

#include <math.h>

long double const pi = 3.14159265358979323846L;
long double const two_pi= 2.0L*pi;
long double const pi_over_2 = pi/2.0L;
long double const pi_over_4 = pi/4.0L;
long double const radians_per_degree = pi/180.0L;
long double const degrees_per_radian = 180.0L/pi;
long double const root_2 = sqrt(2.0L);
long double const root_3 = sqrt(3.0L);

#endif