// output of ./demo/comb/composition-nz-restrpref-demo.cc:
// Description:
//% Compositions of n into positive parts with restricted prefixes.
//% Lexicographic order.

arg 1: 7 == n  [compositions of n (n>=1)]  default=7
arg 2: 5 == c  [Condition function:
      0 ==> all words (condition always true),
      1 ==> adjacent digits distinct
      2 ==> up-down
      3 ==> consecutive parts
      4 ==> odd parts
      5 ==> growth condition: a[k] <= 2*a[k-1]
      6 ==> fall condition: 2*a[k] <= a[k-1]
      7 ==> parts are Mersenne numbers
      8 ==> parts are Mersenne numbers, partitions
      9 ==> parts are powers of 2]  default=5
arg 3: 0 == aa  [Whether to render as ASCII art]  default=0
   1:  [ 7]  [ 1 1 1 1 1 1 1 ]
   2:  [ 6]  [ 1 1 1 1 1 2 ]
   3:  [ 6]  [ 1 1 1 1 2 1 ]
   4:  [ 6]  [ 1 1 1 2 1 1 ]
   5:  [ 5]  [ 1 1 1 2 2 ]
   6:  [ 6]  [ 1 1 2 1 1 1 ]
   7:  [ 5]  [ 1 1 2 1 2 ]
   8:  [ 5]  [ 1 1 2 2 1 ]
   9:  [ 4]  [ 1 1 2 3 ]
  10:  [ 6]  [ 1 2 1 1 1 1 ]
  11:  [ 5]  [ 1 2 1 1 2 ]
  12:  [ 5]  [ 1 2 1 2 1 ]
  13:  [ 5]  [ 1 2 2 1 1 ]
  14:  [ 4]  [ 1 2 2 2 ]
  15:  [ 4]  [ 1 2 3 1 ]
  16:  [ 3]  [ 1 2 4 ]
  17:  [ 6]  [ 2 1 1 1 1 1 ]
  18:  [ 5]  [ 2 1 1 1 2 ]
  19:  [ 5]  [ 2 1 1 2 1 ]
  20:  [ 5]  [ 2 1 2 1 1 ]
  21:  [ 4]  [ 2 1 2 2 ]
  22:  [ 5]  [ 2 2 1 1 1 ]
  23:  [ 4]  [ 2 2 1 2 ]
  24:  [ 4]  [ 2 2 2 1 ]
  25:  [ 3]  [ 2 2 3 ]
  26:  [ 4]  [ 2 3 1 1 ]
  27:  [ 3]  [ 2 3 2 ]
  28:  [ 3]  [ 2 4 1 ]
  29:  [ 5]  [ 3 1 1 1 1 ]
  30:  [ 4]  [ 3 1 1 2 ]
  31:  [ 4]  [ 3 1 2 1 ]
  32:  [ 4]  [ 3 2 1 1 ]
  33:  [ 3]  [ 3 2 2 ]
  34:  [ 3]  [ 3 3 1 ]
  35:  [ 2]  [ 3 4 ]
  36:  [ 4]  [ 4 1 1 1 ]
  37:  [ 3]  [ 4 1 2 ]
  38:  [ 3]  [ 4 2 1 ]
  39:  [ 2]  [ 4 3 ]
  40:  [ 3]  [ 5 1 1 ]
  41:  [ 2]  [ 5 2 ]
  42:  [ 2]  [ 6 1 ]
  43:  [ 1]  [ 7 ]
 ct=43
