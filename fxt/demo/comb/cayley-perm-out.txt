// output of ./demo/comb/cayley-perm-demo.cc:
// Description:
//% Cayley permutations:  Length-n words such that all elements
//%   from 0 to the maximum value occur at least once.
//% Same as: permutations of the (RGS for) set partitions of n.
//% Same as: weak orders on n elements (weak orders are
//%   relations that are transitive and complete).
//% Same as: preferential arrangements of n labeled elements.
//% Generation such that the major order is by content, and minor order lexicographic.
//% Cf. OEIS sequence A000670.

arg 1: 4 == n  [Length of words]  default=4
arg 2: 0 == mi  [Minimal value of max digit]  default=0
arg 3: 3 == mx  [Max allowed digit]  default=3
   1:    [ . . . . ]  0       1 = 2 = 3 = 4
   2:    [ . . . 1 ]  1       1 = 2 = 3 < 4
   3:    [ . . 1 . ]  1       1 = 2 < 3 > 4
   4:    [ . 1 . . ]  1       1 < 2 > 3 = 4
   5:    [ 1 . . . ]  1       1 > 2 = 3 = 4
   6:    [ . . 1 1 ]  1       1 = 2 < 3 = 4
   7:    [ . 1 . 1 ]  1       1 < 2 > 3 < 4
   8:    [ . 1 1 . ]  1       1 < 2 = 3 > 4
   9:    [ 1 . . 1 ]  1       1 > 2 = 3 < 4
  10:    [ 1 . 1 . ]  1       1 > 2 < 3 > 4
  11:    [ 1 1 . . ]  1       1 = 2 > 3 = 4
  12:    [ . . 1 2 ]  2       1 = 2 < 3 < 4
  13:    [ . . 2 1 ]  2       1 = 2 < 3 > 4
  14:    [ . 1 . 2 ]  2       1 < 2 > 3 < 4
  15:    [ . 1 2 . ]  2       1 < 2 < 3 > 4
  16:    [ . 2 . 1 ]  2       1 < 2 > 3 < 4
  17:    [ . 2 1 . ]  2       1 < 2 > 3 > 4
  18:    [ 1 . . 2 ]  2       1 > 2 = 3 < 4
  19:    [ 1 . 2 . ]  2       1 > 2 < 3 > 4
  20:    [ 1 2 . . ]  2       1 < 2 > 3 = 4
  21:    [ 2 . . 1 ]  2       1 > 2 = 3 < 4
  22:    [ 2 . 1 . ]  2       1 > 2 < 3 > 4
  23:    [ 2 1 . . ]  2       1 > 2 > 3 = 4
  24:    [ . 1 1 1 ]  1       1 < 2 = 3 = 4
  25:    [ 1 . 1 1 ]  1       1 > 2 < 3 = 4
  26:    [ 1 1 . 1 ]  1       1 = 2 > 3 < 4
  27:    [ 1 1 1 . ]  1       1 = 2 = 3 > 4
  28:    [ . 1 1 2 ]  2       1 < 2 = 3 < 4
  29:    [ . 1 2 1 ]  2       1 < 2 < 3 > 4
  30:    [ . 2 1 1 ]  2       1 < 2 > 3 = 4
  31:    [ 1 . 1 2 ]  2       1 > 2 < 3 < 4
  32:    [ 1 . 2 1 ]  2       1 > 2 < 3 > 4
  33:    [ 1 1 . 2 ]  2       1 = 2 > 3 < 4
  34:    [ 1 1 2 . ]  2       1 = 2 < 3 > 4
  35:    [ 1 2 . 1 ]  2       1 < 2 > 3 < 4
  36:    [ 1 2 1 . ]  2       1 < 2 > 3 > 4
  37:    [ 2 . 1 1 ]  2       1 > 2 < 3 = 4
  38:    [ 2 1 . 1 ]  2       1 > 2 > 3 < 4
  39:    [ 2 1 1 . ]  2       1 > 2 = 3 > 4
  40:    [ . 1 2 2 ]  2       1 < 2 < 3 = 4
  41:    [ . 2 1 2 ]  2       1 < 2 > 3 < 4
  42:    [ . 2 2 1 ]  2       1 < 2 = 3 > 4
  43:    [ 1 . 2 2 ]  2       1 > 2 < 3 = 4
  44:    [ 1 2 . 2 ]  2       1 < 2 > 3 < 4
  45:    [ 1 2 2 . ]  2       1 < 2 = 3 > 4
  46:    [ 2 . 1 2 ]  2       1 > 2 < 3 < 4
  47:    [ 2 . 2 1 ]  2       1 > 2 < 3 > 4
  48:    [ 2 1 . 2 ]  2       1 > 2 > 3 < 4
  49:    [ 2 1 2 . ]  2       1 > 2 < 3 > 4
  50:    [ 2 2 . 1 ]  2       1 = 2 > 3 < 4
  51:    [ 2 2 1 . ]  2       1 = 2 > 3 > 4
  52:    [ . 1 2 3 ]  3       1 < 2 < 3 < 4
  53:    [ . 1 3 2 ]  3       1 < 2 < 3 > 4
  54:    [ . 2 1 3 ]  3       1 < 2 > 3 < 4
  55:    [ . 2 3 1 ]  3       1 < 2 < 3 > 4
  56:    [ . 3 1 2 ]  3       1 < 2 > 3 < 4
  57:    [ . 3 2 1 ]  3       1 < 2 > 3 > 4
  58:    [ 1 . 2 3 ]  3       1 > 2 < 3 < 4
  59:    [ 1 . 3 2 ]  3       1 > 2 < 3 > 4
  60:    [ 1 2 . 3 ]  3       1 < 2 > 3 < 4
  61:    [ 1 2 3 . ]  3       1 < 2 < 3 > 4
  62:    [ 1 3 . 2 ]  3       1 < 2 > 3 < 4
  63:    [ 1 3 2 . ]  3       1 < 2 > 3 > 4
  64:    [ 2 . 1 3 ]  3       1 > 2 < 3 < 4
  65:    [ 2 . 3 1 ]  3       1 > 2 < 3 > 4
  66:    [ 2 1 . 3 ]  3       1 > 2 > 3 < 4
  67:    [ 2 1 3 . ]  3       1 > 2 < 3 > 4
  68:    [ 2 3 . 1 ]  3       1 < 2 > 3 < 4
  69:    [ 2 3 1 . ]  3       1 < 2 > 3 > 4
  70:    [ 3 . 1 2 ]  3       1 > 2 < 3 < 4
  71:    [ 3 . 2 1 ]  3       1 > 2 < 3 > 4
  72:    [ 3 1 . 2 ]  3       1 > 2 > 3 < 4
  73:    [ 3 1 2 . ]  3       1 > 2 < 3 > 4
  74:    [ 3 2 . 1 ]  3       1 > 2 > 3 < 4
  75:    [ 3 2 1 . ]  3       1 > 2 > 3 > 4
 ct=75
